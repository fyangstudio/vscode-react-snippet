{"region":{"prefix":"region","body":["// #region $1","$2","// #endregion"],"description":"code fold\n"},"hocComponent":{"prefix":"hoc","body":["import React from 'react'","import PropTypes from 'prop-types'","","export default (WrappedComponent) => {","\tconst hocComponent = ({ ...props }) => <WrappedComponent {...props} />","","\thocComponent.propTypes = {","\t}","","\treturn hocComponent","}",""],"description":"HOC Component\n"},"create react class component":{"prefix":"rcc","body":["import React, { Component } from 'react'","","class ${1:${TM_FILENAME_BASE}} extends Component {","\tconstructor(props) {","\t\tsuper(props)","","\t\tthis.state = {","\t\t\t\t $2","\t\t}","\t}","","\trender() {","\t\treturn (","\t\t\t<div>","\t\t\t\t$0","\t\t\t</div>","\t\t)","\t}","}","","export default ${1:${TM_FILENAME_BASE}}",""],"description":"Creates a React class component\n"},"create react class compoment, default export":{"prefix":"rccd","body":["import React, { Component } from 'react'","","export default class ${1:${TM_FILENAME_BASE}} extends Component {","\tconstructor(props) {","\t\tsuper(props)","","\t\tthis.state = {","\t\t\t\t $2","\t\t}","\t}","","\trender() {","\t\treturn (","\t\t\t<div>","\t\t\t\t$0","\t\t\t</div>","\t\t)","\t}","}",""],"description":"Creates a React class component\n"},"create react class component(lifecycle)":{"prefix":"rccl","body":["import React, { Component } from 'react';","","class ${1:${TM_FILENAME_BASE}} extends Component {","\tconstructor(props) {","\t\tsuper(props);","","\t\tthis.state = {","\t\t\t$2","\t\t};","\t}","","\tstatic getDerivedStateFromProps() { } // rarely used","","\tshouldComponentUpdate(nextProps, nextState) { } // rarely used","","\trender() { return (); }","","\tcomponentDidMount() { }","","\tgetSnapshotBeforeUpdate(prevProps, prevState) { } // rarely used","","\tcomponentDidUpdate(prevProps, prevState, snapshot) { }","","\tcomponentWillUnmount() { }","","\tstatic getDerivedStateFromError(error) { }","","\tcomponentDidCatch(error, info) { }","}","","export default ${1:${TM_FILENAME_BASE}}",""],"description":"Creates a React class component(Lifecycles)\n"},"create react class component with PropTypes":{"prefix":"rccp","body":["import React, { Component } from 'react'","import PropTypes from 'prop-types'","","class ${1:${TM_FILENAME_BASE}} extends Component {","\tstatic propTypes = {","","\t}","","\trender() {","\t\treturn (","\t\t\t<div>","\t\t\t\t$0","\t\t\t</div>","\t\t)","\t}","}","","export default ${1:${TM_FILENAME_BASE}}",""],"description":"Creates a React class component with PropTypes\n"},"create react class compoment with PropTypes, default export":{"prefix":"rccpd","body":["import React, { Component } from 'react'","import PropTypes from 'prop-types'","","export default class ${1:${TM_FILENAME_BASE}} extends Component {","\tstatic propTypes = {","\t\t${2:prop}: ${3:PropTypes}","\t}","","\trender() {","\t\treturn (","\t\t\t<div>","\t\t\t\t$0","\t\t\t</div>","\t\t)","\t}","}",""],"description":"Creates a React class component with PropTypes, default export\n"},"create react class PureComponent, default export":{"prefix":"rcpcd","body":["import React, { PureComponent } from 'react'","","export default class ${1:${TM_FILENAME_BASE}} extends PureComponent {","\trender() {","\t\treturn (","\t\t\t<div>","\t\t\t\t$0","\t\t\t</div>","\t\t)","\t}","}",""],"description":"Creates a React pure component class\n"},"create react class PureComponent":{"prefix":"rcpc","body":["import React, { PureComponent } from 'react'","","class ${1:${TM_FILENAME_BASE}} extends PureComponent {","\trender() {","\t\treturn (","\t\t\t<div>","\t\t\t\t$0","\t\t\t</div>","\t\t)","\t}","}","","export default ${1:$TM_FILENAME_BASE}",""],"description":"Creates a React pure component class export\n"},"create react class PureComponent with PropTypes, default export":{"prefix":"rcpcpd","body":["import React, { PureComponent } from 'react'","import PropTypes from 'prop-types'","","export default class ${1:${TM_FILENAME_BASE}} extends PureComponent {","\tstatic propTypes = {","","\t}","","\trender() {","\t\treturn (","\t\t\t<div>","\t\t\t\t$0","\t\t\t</div>","\t\t)","\t}","}",""],"description":"Creates a React component class\n"},"createContext":{"prefix":"context","body":["const ${1:contextName} = React.createContext()",""],"description":"Create React context\n"},"create react function memo component, default export":{"prefix":"rmcd","body":["import React, { memo } from 'react'","","export default memo(function ${1:${TM_FILENAME_BASE}}() {","\treturn (","\t\t<div>","\t\t\t$0","\t\t</div>","\t)","})",""],"description":"Creates a React Memo Function Component\n"},"create react function memo component with PropTypes":{"prefix":"rmcp","body":["import React, { memo } from 'react'","import PropTypes from 'prop-types'","","const ${1:${TM_FILENAME_BASE}} = memo(function ${1:${TM_FILENAME_BASE}}(props) {","\treturn (","\t\t<div>","\t\t\t$0","\t\t</div>","\t)","})","","${1:${TM_FILENAME_BASE}}.propTypes = {","","}","","export default ${1:${TM_FILENAME_BASE}}",""],"description":"Creates a React Memo Function Component with PropTypes\n"},"create react functional component export":{"prefix":"rfc","body":["import React from 'react';","","function ${1:${TM_FILENAME_BASE}}() {","\treturn (","\t\t<div>","\t\t\t$0","\t\t</div>","\t)","}","","export default ${1:${TM_FILENAME_BASE}};",""],"description":"Creates a React Functional Component\n"},"create react functional component, default export":{"prefix":"rfcd","body":["import React from 'react'","","export default function ${1:${TM_FILENAME_BASE}}() {","\treturn (","\t\t<div>","\t\t\t$0","\t\t</div>","\t)","}",""],"description":"Creates a React Functional Component\n"},"create react functional component with PropTypes":{"prefix":"rfcp","body":["import React from 'react';","import PropTypes from 'prop-types';","","function ${1:${TM_FILENAME_BASE}}(props) {","\treturn (","\t\t<div>","\t\t\t$0","\t\t</div>","\t)","}","","${1:${TM_FILENAME_BASE}}.propTypes = {","","};","","export default ${1:${TM_FILENAME_BASE}};","",""],"description":"Creates a React Functional Component with PropTypes\n"},"react arrow function component":{"prefix":["rafc","rafce"],"body":["import React from 'react'","","const ${1:${TM_FILENAME_BASE}} = () => {","\treturn (","\t\t<div>","\t\t\t$0","\t\t</div>","\t)","}","","export default ${1:${TM_FILENAME_BASE}};",""],"description":"Creates a React Arrow Function Component\n"},"create react arrow function component with PropTypes":{"prefix":"rafcp","body":["import React from 'react';","import PropTypes from 'prop-types';","","const ${1:${TM_FILENAME_BASE}} = props => {","\treturn (","\t\t<div>","\t\t\t$0","\t\t</div>","\t)","};","","${1:${TM_FILENAME_BASE}}.propTypes = {","","};","","export default ${1:${TM_FILENAME_BASE}};",""],"description":"Creates a React Arrow Function Component with PropTypes\n"},"useState":{"prefix":["useState","us","rus"],"body":["const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState(${2:initialState})"],"description":"State Hook\n"},"useEffect Without Cleanup":{"prefix":["useEffect","ue","rue"],"body":["useEffect(() => {","\t${1}","}, []);"],"description":"Effect Hook\n"},"useEffect Cleanup":{"prefix":"uec","body":["useEffect(() => {","\t${2}","","\treturn () => {","\t\t${1:cleanUpEffect}","\t};","}, []);"],"description":"Effects Cleanup\n"},"useContext":{"prefix":["useContext","uc"],"body":["const ${1:context} = useContext(${2:contextValue})"]},"useReducer":{"prefix":["useReducer","ur"],"body":["const [state, dispatch] = useReducer(${1:reducer}, ${2:initialState}, ${3:init})"]},"useCallback":{"prefix":["useCallback","ucb"],"body":["useCallback(() => {","\t${1:callback($2)}","}, [${2:input}],",")"]},"useMemo":{"prefix":["useMemo","um"],"body":["useMemo(() => ${1:function}, ${2:input})"]},"useRef":{"prefix":["useRef","ure"],"body":["const ${1:ref} = useRef(${2:initialValue})"]},"useImperativeHandle":{"prefix":["useImperativeHandle","uih"],"body":["useImperativeHandle(","\t${1:ref},","\t() => {","\t\t${2:handler}","\t},","\t[${3:input}],",")"]},"useDebugValue":{"prefix":["useDebugValue","udv"],"body":["useDebugValue(${1:value})"]},"useLayoutEffect":{"prefix":["useLayoutEffect","ule"],"body":["useLayoutEffect(() => {","\treturn () => {","\t\t${1:effect}","\t},","\t[${2:input}]","})"]},"import React":{"prefix":"imr","body":["import React from 'react';",""]},"import React useState":{"prefix":"imrus","body":["import React, { useState } from 'react';",""]},"import React useState useEffect":{"prefix":"imruu","body":["import React, { useState, useEffect } from 'react';",""]},"import ReactDOM":{"prefix":"imrd","body":["import ReactDOM from 'react-dom';",""]},"import react component":{"prefix":"imrc","body":["import React, { Component } from 'react';"]},"import React, { Component } & PropTypes":{"prefix":"imrcp","body":["import React, { Component } from 'react'","import PropTypes from 'prop-types'",""]},"import React, { PureComponent }":{"prefix":"imrpc","body":["import React, { PureComponent } from 'react'",""]},"import React, { PureComponent } & PropTypes":{"prefix":"imrpcp","body":["import React, { PureComponent } from 'react'","import PropTypes from 'prop-types'",""]},"import React, { memo }":{"prefix":"imrm","body":["import React, { memo } from 'react'",""]},"import React, { memo } & PropTypes":{"prefix":"imrmp","body":["import React, { memo } from 'react'","import PropTypes from 'prop-types'",""]},"import PropTypes":{"prefix":"impt","body":["import PropTypes from 'prop-types'",""]},"componentWillMount":{"prefix":"cwm","body":["componentWillMount() {","\t$0","}",""],"description":"DEPRECATED!!!. Invoked once, both on the client and server, immediately before the initial rendering occurs\n"},"UNSAFE_componentWillMount":{"prefix":"cwmu","body":["UNSAFE_componentWillMount() {","\t$0","}",""],"description":"DEPRECATED!!!. Invoked once, both on the client and server, immediately before the initial rendering occurs\n"},"componentDidMount":{"prefix":"cdm","body":["componentDidMount() {","\t$0","}",""],"description":"Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.\n"},"componentWillReceiveProps":{"prefix":"cwrp","body":["componentWillReceiveProps(nextProps) {","\t$0","}",""],"description":"DEPRECATED!!!. Invoked when a component is receiving new props. This method is not called for the initial render.\n"},"UNSAFE_componentWillReceiveProps":{"prefix":"cwrpu","body":["UNSAFE_componentWillReceiveProps(nextProps) {","\t$0","}",""],"description":"DEPRECATED!!!. Invoked when a component is receiving new props. This method is not called for the initial render.\n"},"shouldComponentUpdate":{"prefix":"scu","body":["shouldComponentUpdate(nextProps, nextState) {","\t$0","}",""],"description":"Invoked before rendering when new props or state are being received. \n"},"componentWillUpdate":{"prefix":"cwu","body":["componentWillUpdate(nextProps, nextState) {","\t$0","}",""],"description":"DEPRECATED!!!. Invoked immediately before rendering when new props or state are being received.\n"},"UNSAFE_componentWillUpdate":{"prefix":"cwuu","body":["UNSAFE_componentWillUpdate(nextProps, nextState) {","\t$0","}",""],"description":"DEPRECATED!!!. Invoked immediately before rendering when new props or state are being received.\n"},"componentDidUpdate":{"prefix":"cdu","body":["componentDidUpdate(prevProps, prevState) {","\tif (prevState.${1:stateName} !== this.state.${1:stateName}) {","\t\t$0","\t}","}",""],"description":"Invoked immediately after the component's updates are flushed to the DOM.\n"},"componentWillUnmount":{"prefix":"cwun","body":["componentWillUnmount() {","\t$0","}",""],"description":"Invoked immediately before a component is unmounted from the DOM.\n"},"getDerivedStateFromProps":{"prefix":"gdsfp","body":["static getDerivedStateFromProps(props, state) {","\t${1}","}"],"description":"Invoked right before calling the render method, both on the initial mount and on subsequent updates.\n"},"getSnapshotBeforeUpdate":{"prefix":"gsbu","body":["getSnapshotBeforeUpdate = (prevProps, prevState) => {","\t$0","}",""],"description":"Called right before mutations are made (e.g. before the DOM is updated)\n"},"componentRender":{"prefix":"render","body":["render() {","\treturn (","\t\t<div>","\t\t\t$0","\t\t</div>","\t)","}"],"description":"Basic render.\n"},"propTypeArray":{"prefix":"pta","body":"PropTypes.array,","description":"Array prop type\n"},"propTypeArrayRequired":{"prefix":"ptar","body":"PropTypes.array.isRequired,","description":"Array prop type required\n"},"propTypeBool":{"prefix":"ptb","body":"PropTypes.bool,","description":"Bool prop type\n"},"propTypeBoolRequired":{"prefix":"ptbr","body":"PropTypes.bool.isRequired,","description":"Bool prop type required\n"},"propTypeFunc":{"prefix":"ptf","body":"PropTypes.func,","description":"Func prop type\n"},"propTypeFuncRequired":{"prefix":"ptfr","body":"PropTypes.func.isRequired,","description":"Func prop type required\n"},"propTypeNumber":{"prefix":"ptn","body":"PropTypes.number,","description":"Number prop type\n"},"propTypeNumberRequired":{"prefix":"ptnr","body":"PropTypes.number.isRequired,","description":"Number prop type required\n"},"propTypeObject":{"prefix":"pto","body":"PropTypes.object,","description":"Object prop type\n"},"propTypeObjectRequired":{"prefix":"ptor","body":"PropTypes.object.isRequired,","description":"Object prop type required\n"},"propTypeString":{"prefix":"pts","body":"PropTypes.string,","description":"String prop type\n"},"propTypeStringRequired":{"prefix":"ptsr","body":"PropTypes.string.isRequired,","description":"String prop type required\n"},"propTypeNode":{"prefix":"ptnd","body":"PropTypes.node,","description":"Anything that can be rendered: numbers, strings, elements or an array\n"},"propTypeNodeRequired":{"prefix":"ptndr","body":"PropTypes.node.isRequired,","description":"Anything that can be rendered: numbers, strings, elements or an array required\n"},"propTypeElement":{"prefix":"ptel","body":"PropTypes.element,","description":"React element prop type\n"},"propTypeElementRequired":{"prefix":"ptelr","body":"PropTypes.element.isRequired,","description":"React element prop type required\n"},"propTypeInstanceOf":{"prefix":"pti","body":"PropTypes.instanceOf($0),","description":"Is an instance of a class prop type\n"},"propTypeInstanceOfRequired":{"prefix":"ptir","body":"PropTypes.instanceOf($0).isRequired,","description":"Is an instance of a class prop type required\n"},"propTypeEnum":{"prefix":"pte","body":"PropTypes.oneOf(['$0']),","description":"Prop type limited to specific values by treating it as an enum\n"},"propTypeEnumRequired":{"prefix":"pter","body":"PropTypes.oneOf(['$0']).isRequired,","description":"Prop type limited to specific values by treating it as an enum required\n"},"propTypeOneOfType":{"prefix":"ptet","body":"PropTypes.oneOfType([\n\t$0\n]),","description":"An object that could be one of many types\n"},"propTypeOneOfTypeRequired":{"prefix":"ptetr","body":"PropTypes.oneOfType([\n\t$0\n]).isRequired,","description":"An object that could be one of many types required\n"},"propTypeArrayOf":{"prefix":"ptao","body":"PropTypes.arrayOf($0),","description":"An array of a certain type\n"},"propTypeArrayOfRequired":{"prefix":"ptaor","body":"PropTypes.arrayOf($0).isRequired,","description":"An array of a certain type required\n"},"propTypeObjectOf":{"prefix":"ptoo","body":"PropTypes.objectOf($0),","description":"An object with property values of a certain type\n"},"propTypeObjectOfRequired":{"prefix":"ptoor","body":"PropTypes.objectOf($0).isRequired,","description":"An object with property values of a certain type required\n"},"propTypeShape":{"prefix":"ptsh","body":"PropTypes.shape({\n\t$0\n}),","description":"An object taking on a particular shape\n"},"propTypeShapeRequired":{"prefix":"ptshr","body":"PropTypes.shape({\n\t$0\n}).isRequired,","description":"An object taking on a particular shape required\n"},"staticPropTpyes":{"prefix":"ptypes","body":"static propTypes = {\n\t$0\n}\n"},"propTypeAny":{"prefix":"ptany","body":"PropTypes.any,","description":"Any prop type\n"},"createRef":{"prefix":"ref","body":["this.${1:refName}Ref = React.createRef()",""],"description":"Create ref statement used inside constructor\n"},"forwardRef":{"prefix":"reff","body":["const ref = React.createRef()",""],"description":"Forward ref statement used inside component\n"},"import React Router/Switch/Route":{"prefix":"imrrsr","body":["import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';",""],"description":"import BrowserRouter/Switch/Route\n"},"import React Switch/Route":{"prefix":"imrsr","body":["import { Switch, Route } from 'react-router-dom';",""],"description":"import Switch & Route\n"},"import React Router Link":{"prefix":"imrl","body":["import { Link } from 'react-router-dom';",""],"description":"import Link(React Router)\n"},"import React Router NavLink":{"prefix":"imrnl","body":["import { NavLink } from 'react-router-dom';",""],"description":"import NavLink(React Router)\n"},"import React withRouter":{"prefix":"imrnl","body":["import { withRouter } from 'react-router';",""],"description":"import withRouter(React Router)\n"},"import React Router useHistory":{"prefix":"imruh","body":["import { useHistory } from 'react-router-dom';",""],"description":"import useHistory(React Router)\n"},"useHistory":{"prefix":"ruh","body":["const history = useHistory();","history.push(${1:\"path\"});"],"description":"useHistory(React Router)\n"},"import React Router useLocation":{"prefix":"imrul","body":["import { useLocation } from 'react-router-dom';",""],"description":"import useLocation(React Router)\n"},"useLocation":{"prefix":"rul","body":["const location = useLocation();","${1:location.pathname}"],"description":"useLocation(React Router)\n"},"import React Router useParams":{"prefix":"imrup","body":["import { useParams } from 'react-router-dom';",""],"description":"import useParams(React Router)\n"},"useParams":{"prefix":"rup","body":["const ${1:id} = useParams();"],"description":"useParams(React Router)\n"},"import React Router useRouteMatch":{"prefix":"imrurm","body":["import { useRouteMatch } from 'react-router-dom';",""],"description":"import useRouteMatch(React Router)\n"},"useRouteMatch":{"prefix":"rurm","body":["const match = useRouteMatch();"],"description":"useRouteMatch(React Router)\n"},"React Router Route":{"prefix":"rr","body":["<Route path='${1:path}'>","<{$2:Component} />","</Route>"],"description":"Route\n"},"React Router Switch":{"prefix":"rsr","body":["<Switch>","\t<Route exact path=\"/\">","\t\t<${1:Component} />","\t</Route>","\t<Route path=\"${2:path}\">","\t\t<${3:Component} />","\t</Route>","</Switch>"],"description":"Switch\n"},"React Router Link":{"prefix":["rl","link"],"body":"<Link to={${1:path}}>${2:anchorText}</Link>\n","description":"Link\n"},"React Router NavLink":{"prefix":["rnl","navlink"],"body":"<NavLink to={${1:path}}>${2:anchorText}</NavLink>\n","description":"NavLink\n"},"React Router Redirect":{"prefix":["rre","redirect"],"body":["<Switch>","\t<Redirect from=\"${1:/users/:id}\" to=\"${2:/users/profile/:id}\" />","\t<Route path=\"${2:/users/profile/:id}\">","\t\t<${3:Component} />","\t</Route>","</Switch>"],"description":"Redirect\n"},"destructProps":{"prefix":"cp","body":["const { $1 } = this.props"],"description":"Creates and assigns a local variable using props destructing\n"},"destructState":{"prefix":"cs","body":["const { $1 } = this.state"],"description":"Creates and assigns a local variable using state destructing\n"},"react class constructor":{"prefix":"rconst","body":["constructor(props) {","\tsuper(props);","","\tthis.state = {","\t\t $0","\t}","}",""],"description":"React adds a default constructor for it('', () => {})the class that contains props as arguments\n"},"react state":{"prefix":"rst","body":["state = {","\t$1","}",""],"description":"React creates empty state object. To be used in a constructor.\n"},"component set state object":{"prefix":"sst","body":"this.setState({$0})","description":"Performs a shallow merge of nextState into current state\n"},"component set state func":{"prefix":"sstf","body":["this.setState((state, props) => { return { $0 }})",""],"description":"Performs a shallow merge of nextState into current state\n"},"component props":{"prefix":"props","body":"this.props.$0","description":"Access component's props\n"},"component state":{"prefix":"state","body":"this.state.$0"},"this.method.bind":{"prefix":["tmb","bd"],"body":"this.${1:methodName} = this.${1:methodName}.bind(this)$0","description":"Binds this to a method\n"}}